{
  "hash": "f1ca9b0b653d905dab2dbe0756ef4ec3",
  "result": {
    "engine": "knitr",
    "markdown": "# Simulation from fitted model\n\nThis page showcase the model simulation using the E~max~ model with no covariate.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(BayesERtools)\nlibrary(posterior)\nlibrary(tidybayes)\nlibrary(bayesplot)\nlibrary(loo)\nlibrary(here)\nlibrary(gt)\n\ntheme_set(theme_bw(base_size = 12))\n```\n:::\n\n\n\n\n\n\n## Load data\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_example_emax_nocov <- read_csv(here(\"data\", \"d_example_emax_nocov.csv\"))\n```\n:::\n\n\n\n\n## Fit models\n\n::: {.panel-tabset}\n\n### Sigmoidal E~max~ model\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\nermod_sigemax <- dev_ermod_emax(\n  data = d_example_emax_nocov,\n  var_resp = \"Y\",\n  var_exposure = \"Conc\",\n  gamma_fix = NULL\n)\n\nermod_sigemax\n```\n\n<pre class=\"r-output\"><code>\n<span style='color: #00BBBB;'>──</span> <span style='font-weight: bold;'>Emax model</span> <span style='color: #00BBBB;'>──────────────────────────────────────────────────────────────────</span>\n<span style='color: #00BBBB;'>ℹ</span> Use `plot_er()` to visualize ER curve\n\n── <span style='font-weight: bold;'>Developed model</span> ──\n\n---- Emax model fit with rstanemax ----\n       mean se_mean   sd  2.5%   25%   50%   75% 97.5%   n_eff Rhat\nemax  15.92    0.24 5.49  8.67 11.64 14.71 19.07 29.38  545.77 1.01\ne0     3.13    0.09 2.00 -2.15  2.25  3.58  4.54  5.62  550.23 1.00\nec50  24.94    0.30 8.63 14.98 19.47 22.51 28.06 48.31  843.12 1.00\ngamma  1.77    0.03 0.77  0.75  1.22  1.62  2.19  3.54  664.61 1.00\nsigma  0.86    0.00 0.16  0.62  0.75  0.84  0.95  1.24 1348.22 1.00\n* Use `extract_stanfit()` function to extract raw stanfit object\n* Use `extract_param()` function to extract posterior draws of key parameters\n* Use `plot()` function to visualize model fit\n* Use `posterior_predict()` or `posterior_predict_quantile()` function to get\n  raw predictions or make predictions on new data\n* Use `extract_obs_mod_frame()` function to extract raw data \n  in a processed format (useful for plotting)\n</code></pre>\n:::\n\n\n\n\n### Regular E~max~ (h fixed at 1)\n\nAnother model without sigmoidal component; will be used when we do\nmodel comparison.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\nermod_emax <- dev_ermod_emax(\n  data = d_example_emax_nocov,\n  var_resp = \"Y\",\n  var_exposure = \"Conc\",\n  gamma_fix = 1\n)\n\nermod_emax\n```\n\n<pre class=\"r-output\"><code>\n<span style='color: #00BBBB;'>──</span> <span style='font-weight: bold;'>Emax model</span> <span style='color: #00BBBB;'>──────────────────────────────────────────────────────────────────</span>\n<span style='color: #00BBBB;'>ℹ</span> Use `plot_er()` to visualize ER curve\n\n── <span style='font-weight: bold;'>Developed model</span> ──\n\n---- Emax model fit with rstanemax ----\n       mean se_mean    sd  2.5%   25%   50%   75% 97.5%   n_eff Rhat\nemax  22.52    0.08  2.46 18.73 20.84 22.17 23.81 28.09  976.89 1.00\ne0     0.98    0.04  1.36 -2.23  0.32  1.18  1.91  2.98  912.27 1.00\nec50  31.28    0.39 11.65 13.08 22.74 29.70 38.10 57.39  875.72 1.00\ngamma  1.00     NaN  0.00  1.00  1.00  1.00  1.00  1.00     NaN  NaN\nsigma  0.89    0.00  0.17  0.63  0.77  0.86  0.98  1.28 1216.16 1.01\n* Use `extract_stanfit()` function to extract raw stanfit object\n* Use `extract_param()` function to extract posterior draws of key parameters\n* Use `plot()` function to visualize model fit\n* Use `posterior_predict()` or `posterior_predict_quantile()` function to get\n  raw predictions or make predictions on new data\n* Use `extract_obs_mod_frame()` function to extract raw data \n  in a processed format (useful for plotting)\n</code></pre>\n:::\n\n\n\n\n:::\n\n# Extrapolation \n\n::: {.panel-tabset}\n\n## without residual error\n\nThis represents uncertainty in the model parameters.\n\n- `p(f(theta)|xnew, yobs)`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnew_conc_vec <- seq(0, 100, by = 1)\n\nersim_sigemax <-\n  sim_er_new_exp(ermod_sigemax, new_conc_vec)\n\nersim_sigemax_med_qi <-\n  ersim_sigemax |>\n  calc_ersim_med_qi(qi_width = c(0.5, 0.95))\n\nggplot(data = ersim_sigemax_med_qi, aes(x = Conc, y = .epred)) +\n  geom_ribbon(\n    data = ersim_sigemax_med_qi |> filter(.width == 0.95),\n    aes(ymin = .epred.lower, ymax = .epred.upper),\n    fill = \"yellow3\", alpha = 0.5\n  ) +\n  geom_ribbon(\n    data = ersim_sigemax_med_qi |> filter(.width == 0.5),\n    aes(ymin = .epred.lower, ymax = .epred.upper),\n    fill = \"orange1\"\n  ) +\n  geom_line(data = ersim_sigemax_med_qi |> filter(.width == 0.5), col = \"darkred\") +\n  geom_point(data = d_example_emax_nocov, aes(y = Y)) +\n  coord_cartesian(ylim = c(-1, 22)) +\n  scale_y_continuous(\"Response\", breaks = 5 * 0:4) +\n  labs(x = \"Exposure\",\n    title = \"Extrapolation (no residual)\",\n    subtitle = \"Represents uncertainty in the model parameters (Credible interval)\",\n    caption = \"95% CI in yellow, 50% CI in orange\")\n```\n\n::: {.cell-output-display}\n![](simulation_files/figure-html/fig-extrapolation-1-1.png){#fig-extrapolation-1 width=672}\n:::\n:::\n\n\n\n\n## with residual error\n\nThis represents uncertainty in the model parameters plus the residual error.\n\n- `p(ynew|xnew, yobs)`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = ersim_sigemax_med_qi, aes(x = Conc, y = .prediction)) +\n  geom_ribbon(\n    data = ersim_sigemax_med_qi |> filter(.width == 0.95),\n    aes(ymin = .prediction.lower, ymax = .prediction.upper),\n    fill = \"yellow3\", alpha = 0.5\n  ) +\n  geom_ribbon(\n    data = ersim_sigemax_med_qi |> filter(.width == 0.5),\n    aes(ymin = .prediction.lower, ymax = .prediction.upper),\n    fill = \"orange1\"\n  ) +\n  geom_line(data = ersim_sigemax_med_qi |> filter(.width == 0.5), col = \"darkred\") +\n  geom_point(data = d_example_emax_nocov, aes(y = Y)) +\n  coord_cartesian(ylim = c(-1, 22)) +\n  scale_y_continuous(\"Response\", breaks = 5 * 0:4) +\n  labs(x = \"Exposure\",\n    title = \"Extrapolation (incl. residual)\",\n    subtitle = \"Represents uncertainty + residual error (Prediction interval)\",\n    caption = \"95% PI in yellow, 50% PI in orange\")\n```\n\n::: {.cell-output-display}\n![](simulation_files/figure-html/fig-extrapolation-2-1.png){#fig-extrapolation-2 width=672}\n:::\n:::\n\n\n\n\n## Overlay Emax and Sigmoidal Emax\n\nNo discernible difference between the two models.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nersim_emax <-\n  sim_er_new_exp(ermod_emax, new_conc_vec)\nersim_emax_med_qi <-\n  ersim_emax |>\n  calc_ersim_med_qi(qi_width = c(0.5, 0.95))\n\nggplot(data = ersim_sigemax_med_qi, aes(x = Conc, y = .epred)) +\n  geom_ribbon(\n    data = ersim_sigemax_med_qi |> filter(.width == 0.95),\n    aes(ymin = .epred.lower, ymax = .epred.upper),\n    fill = \"orange1\", alpha = 0.5\n  ) +\n  geom_line(data = ersim_sigemax_med_qi |> filter(.width == 0.95), col = \"darkred\") +\n  geom_ribbon(\n    data = ersim_emax_med_qi |> filter(.width == 0.95),\n    aes(ymin = .epred.lower, ymax = .epred.upper),\n    fill = \"turquoise3\", alpha = 0.5\n  ) +\n  geom_line(data = ersim_emax_med_qi |> filter(.width == 0.95), col = \"steelblue3\") +\n  geom_point(data = d_example_emax_nocov, aes(y = Y)) +\n  coord_cartesian(ylim = c(-1, 22)) +\n  scale_y_continuous(\"Response\", breaks = 5 * 0:4) +\n  labs(x = \"Exposure\",\n    title = \"Extrapolation (no residual)\",\n    subtitle = \"Represents uncertainty in the model parameters (Credible interval)\",\n    caption = \"Sigmoidal Emax: Orange, Emax: Blue, 50% CI\")\n```\n\n::: {.cell-output-display}\n![](simulation_files/figure-html/fig-emax-sigemax-compare-1.png){#fig-emax-sigemax-compare width=672}\n:::\n:::\n\n\n\n\n:::\n\n\n",
    "supporting": [
      "simulation_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}